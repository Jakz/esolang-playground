package jack.esolang;

import jack.esolang.cellular.defs.*;
import jack.esolang.gui.*;

import jack.esolang.languages.*;
import jack.esolang.source.*;
import jack.esolang.memory.*;
import jack.esolang.io.*;

public class Main
{
	public static void main(String[] args)
	{
		//MainFrame mainFrame = new MainFrame();
		AutomataRepository repo = new AutomataRepository();
		repo.searchAndLoad();
		
		/*String helloWorld = 
			"++++++++++"+
			"["+
			"   >+++++++>++++++++++>+++>+<<<<-"+
			"]"+
			">++."+
			">+."+
			"+++++++."+
			"."+
			"+++."+
			">++."+
			"<<+++++++++++++++."+
			">."+
			"+++."+
			"------."+
			"--------."+
			">+."+
			">.";
		
		String fibonacci= "+++++++++++>+>>>>++++++++++++++++++++++++++++++++++++++++++++>++++++++++++++++++++++++++++++++<<<<<<[>[>>>>>>+>+<<<<<<<-]>>>>>>>[<<<<<<<+>>>>>>>-]<[>++++++++++[-<-[>>+>+<<<-]>>>[<<<+>>>-]+<[>[-]<[-]]>[<<[>>>+<<<-]>>[-]]<<]>>>[>>+>+<<<-]>>>[<<<+>>>-]+<[>[-]<[-]]>[<<+>>[-]]<<<<<<<]>>>>>[++++++++++++++++++++++++++++++++++++++++++++++++.[-]]++++++++++<[->-<]>++++++++++++++++++++++++++++++++++++++++++++++++.[-]<<<<<<<<<<<<[>>>+>+<<<<-]>>>>[<<<<+>>>>-]<-[>>.>.<<<[-]]<<[>>+>+<<<-]>>>[<<<+>>>-]<<[<+>-]>[<+>-]<<<-]";
		String rot13 = ",[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>++++++++++++++<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>>+++++[<----->-]<<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>++++++++++++++<-[>+<-[>+<-[>+<-[>+<-[>+<-[>++++++++++++++<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>>+++++[<----->-]<<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>+<-[>++++++++++++++<-[>+<-]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]>.[-]<,]";
		
		Brainfuck bf = new Brainfuck();
		
		Code1D<Character> code = Compilers.compileCharProgram(rot13, bf);
		bf.setCode(code);
		bf.setMemory(new FixedTape<Integer>(1000, Builder.intBuilder()));
		bf.setStdin(new StringStdin("Antani"));
		bf.setStdout(new PrintStdout<Character>());
		bf.run();*/
	}
	
	public static void foo(String[] array)
	{
		String string = new String();
		for (int i = 0; i < array.length; i++) {
			
		}
	}
	
	public static void foo2(String[] array)
	{
		for (int i = 0; i < array.length; i++) {
			String string = new String();
		}
	}
}
